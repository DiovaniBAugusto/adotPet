generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user {
  id       String    @id @default(uuid())
  username String
  email    String
  password String
  userRole String
  person   person[]
  ong      ong[]
  pet      pet[]
  requests request[]
}

model ong {
  id            String          @id @default(uuid())
  onName        String
  userId        String
  pet           pet[]
  checklistForm checklistForm[]
  requests      request[]

  relation user @relation(fields: [userId], references: [id])
}

model checklistForm {
  id            String              @id @default(uuid())
  type          String
  animal        String
  ongId         String
  checklistItem checklistItemForm[]

  relationOng ong @relation(fields: [ongId], references: [id])
}

model checklistItemForm {
  id          String  @id @default(uuid())
  required    Boolean
  title       String
  type        String
  checklistId String

  relationChecklist checklistForm @relation(fields: [checklistId], references: [id])

}

model pet {
  id         String    @id @default(uuid())
  animalType String
  weight     Float
  age        Int
  userId     String
  ongId      String
  status     String
  request    request[]

  relationUser user @relation(fields: [userId], references: [id])
  relationOng  ong  @relation(fields: [ongId], references: [id])
}

model person {
  id         String @id @default(uuid())
  name       String
  last_name  String
  age        Int
  cpf        Int
  fone       Int?
  logradouro String
  number     Int
  cep        Int
  city       String
  state      String
  country    String
  userId     String

  relation user @relation(fields: [userId], references: [id])
}

model request {
  id        String      @id @default(uuid())
  type      String
  comment   String
  status    String
  petId     String
  userId    String
  ongId     String
  checklist checklist[]

  relationPet  pet  @relation(fields: [petId], references: [id])
  relationUser user @relation(fields: [userId], references: [id])
  relationOng  ong  @relation(fields: [ongId], references: [id])
}

model checklist {
  id         String          @id @default(uuid())
  status     String
  type       String
  animalType String
  requestId  String
  itens      checklistItem[]

  relationReq request @relation(fields: [requestId], references: [id])
}

model checklistItem {
  id          String  @id @default(uuid())
  required    Boolean
  title       String
  type        String
  status      Boolean
  checklistId String

  relationCheck checklist @relation(fields: [checklistId], references: [id])
}

model session {
  sid    String   @id @unique
  sess   String
  expire DateTime
}
